// generated from rosidl_adapter/resource/msg.idl.em
// with input from rotor_tm_msgs/msg/TRPYCommand.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Quaternion.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module rotor_tm_msgs {
  module msg {
    typedef double double__3[3];
    @verbatim (language="comment", text=
      "Include the header")
    struct TRPYCommand {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Scalar fields")
      double thrust;

      double roll;

      double pitch;

      double yaw;

      @verbatim (language="comment", text=
        "Vector fields from geometry_msgs")
      geometry_msgs::msg::Vector3 angular_velocity;

      geometry_msgs::msg::Quaternion quaternion;

      @verbatim (language="comment", text=
        "Use float64[] for arrays" "\n"
        "k_r as an array of float64")
      double__3 k_r;

      @verbatim (language="comment", text=
        "k_om as an array of float64")
      double__3 k_om;
    };
  };
};
